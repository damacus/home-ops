---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  uninstall:
    keepHistory: false

  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            supplementalGroups:
              - 100

        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.18.2@sha256:fbe142ff2e02713740329ebb5981c6bb6fe54f8b4de18e98637c2ff586ea1935
            env:
              # Configure application
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_SECRET_KEY
              PAPERLESS_URL: https://{{ .Release.Name }}.ironstone.casa
              PAPERLESS_PORT: "8000"
              PAPERLESS_TIME_ZONE: Europe/London
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Configure Remote User auth
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_PROVIDERS: |
                {
                  "openid_connect": {
                    "APPS": [
                      {
                        "provider_id": "dex",
                        "name": "Dex",
                        "client_id": "paperless",
                        "secret": "paperless-client",
                        "settings": {
                          "server_url": "https://dex.damacus.io/.well-known/openid-configuration"
                        }
                      }
                    ]
                  }
                }
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /data/nas-mount/incoming
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas-mount/export
              PAPERLESS_MEDIA_ROOT: /data/nas-mount/media
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Configure redis integration
              PAPERLESS_REDIS_PREFIX: pngx
              PAPERLESS_REDIS: redis://redis-master.database.svc.cluster.local:6379
              # Configure Tika
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              # Configure user permissions
              USERMAP_GID: "1030"
              USERMAP_UID: "1030"
              # Configure OCR
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
              # Configure admin user
              PAPERLESS_ADMIN_USER:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_USER
              PAPERLESS_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_PASSWORD
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                cpu: 2000m
                memory: 4Gi

          gotenberg:
            image:
              repository: thecodingmachine/gotenberg
              tag: 8.23.0@sha256:3e9d970c395dfd7f0f98fd8da5adc01dab6bf95881d8d232f77a9feafe6d4977
            env:
              - { name: DISABLE_GOOGLE_CHROME, value: "1" }
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi

          tika:
            image:
              repository: apache/tika
              tag: 3.2.2.0@sha256:031530a4b81f37454631ce9352b07cedfd03d83c875b05677d80bff6958d11ff
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 1Gi

    service:
      app:
        controller: paperless
        ports:
          http:
            port: 8000

    # ingress:
    #   app:
    #     className: "internal"
    #     hosts:
    #       - host: paperless.ironstone.casa
    #         paths:
    #           - path: /
    #             service:
    #               identifier: app
    #               port: http

    route:
      app:
        hostnames: ["{{ .Release.Name }}.ironstone.casa"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    persistence:
      data:
        existingClaim: paperless-localdata
        advancedMounts:
          paperless:
            app:
              - path: /data/local

      nas:
        type: nfs
        server: 192.168.1.243
        path: /var/nfs/shared/nfs/paperless
        globalMounts:
          - path: /data/nas-mount

    affinity:
      # Prefer to avoid home-assistant pods (soft anti-affinity)
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["home-assistant"]
              topologyKey: kubernetes.io/hostname
      # Prefer to be scheduled with redis (soft affinity)
      podAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 80
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["redis"]
              topologyKey: kubernetes.io/hostname
