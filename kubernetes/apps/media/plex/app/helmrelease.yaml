---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.0.7998-c29d4c0c8@sha256:7c4501799f0d5f4f94fcb95a8a47b883528354c779a182a9ae4af118a1fc6b10
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://plex.${SECRET_INTERNAL_DOMAIN}:443,http://${PLEX_ADDR}:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.0.0/16,${CLUSTER_CIDR}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 200m
                memory: 500Mi
              limits:
                cpu: 800m
                memory: 2Gi

        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 100 # users
              - 65537 # video
              - 44

    service:
      app:
        controller: plex
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: ${PLEX_ADDR}
        ports:
          http:
            port: 32400
            protocol: TCP
    # gdm-udp1:
    #   port: 32410
    #   protocol: UDP
    # gdm-udp2:
    #   port: 32412
    #   protocol: UDP
    # gdm-udp3:
    #   port: 32413
    #   protocol: UDP
    # gdm-udp4:
    #   port: 32414
    #   protocol: UDP
    # dlna:
    #   port: 32469
    #   protocol: TCP

    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_ssl_protocols TLSv1.3;
        hosts:
          - host: &host plex.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

      internal:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: ${NGINX_INTERNAL_ADDR}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_ssl_protocols TLSv1.3;
          # https://github.com/kubernetes/ingress-nginx/issues/8257
        hosts:
          - host: &internal-host "plex.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *internal-host

    persistence:
      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs

      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: "/config/Library/Application Support/Plex Media Server/Cache"

      plex-config-longhorn:
        enabled: true
        existingClaim: plex-config
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server

      media:
        enabled: true
        type: nfs
        server: ${SECRET_SYNOLOGY_IP:-test}
        path: /volume2/Plex/plex-data
        globalMounts:
          - path: /media
