{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:recommended",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":automergeBranch",
    "github>damacus/home-ops//.github/renovate/cnpg.json5",
    "github>damacus/home-ops//.github/renovate/autoMerge.json5",
    "github>damacus/home-ops//.github/renovate/groups.json5",
    "github>damacus/home-ops//.github/renovate/labels.json5",
    "github>damacus/home-ops//.github/renovate/grafanaDashboards.json5",
    "github>damacus/home-ops//.github/renovate/autoMerge.json5",
  ],
  dependencyDashboard: true,
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  suppressNotifications: ["prEditedNotification", "prIgnoreNotification"],
  rebaseWhen: "conflicted",
  schedule: ["on saturday"],
  flux: {
    fileMatch: [
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$",
    ],
  },
  "helm-values": {
    fileMatch: [
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$",
    ],
  },
  kubernetes: {
    fileMatch: [
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?$",
    ],
  },
  kustomize: {
    fileMatch: ["(^|/)kustomization\\.ya?ml(\\.j2)?$"],
  },
  pip_requirements: {
    fileMatch: ["(^|/)[\\w-]*requirements(-\\w+)?\\.(txt|pip)(\\.j2)?$"],
  },
  "ansible-galaxy": {
    fileMatch: ["(^|/)(galaxy|requirements)(\\.ansible)?\\.ya?ml(\\.j2)?$"],
  },
  // commitMessageTopic: "{{depName}}",
  // commitMessageExtra: "to {{newVersion}}",
  // commitMessageSuffix: "",
  packageRules: [
    {
      description: ["Auto merge Github Actions"],
      matchManagers: ["github-actions"],
      automerge: true,
      automergeType: "branch",
      ignoreTests: true,
      matchUpdateTypes: ["minor", "patch"],
    },
    {
      description: ["Use custom versioning for k3s"],
      matchDatasources: ["github-releases"],
      versioning: "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<compatibility>\\+k.s)\\.?(?<build>\\d+)$",
      matchPackageNames: ["/k3s/"],
    },
    {
      matchDatasources: ["helm"],
      commitMessageTopic: "chart {{depName}}",
    },
    {
      matchDatasources: ["docker"],
      commitMessageTopic: "image {{depName}}",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(container)!: ",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "container",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "container",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["digest"],
      semanticCommitType: "chore",
      semanticCommitScope: "container",
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(helm)!: ",
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "helm",
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "helm",
    },
    {
      matchDatasources: ["galaxy", "galaxy-collection"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(ansible)!: ",
    },
    {
      matchDatasources: ["galaxy", "galaxy-collection"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "ansible",
    },
    {
      matchDatasources: ["galaxy", "galaxy-collection"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "ansible",
    },
    {
      matchDatasources: ["github-releases", "github-tags"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(github-release)!: ",
    },
    {
      matchDatasources: ["github-releases", "github-tags"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "github-release",
    },
    {
      matchDatasources: ["github-releases", "github-tags"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "github-release",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(github-action)!: ",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "github-action",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "github-action",
    },
  ],
}
