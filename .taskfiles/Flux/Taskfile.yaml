---
version: "3"

vars:
  # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
  PROMETHEUS_OPERATOR_VERSION: "v0.71.2"

tasks:
  verify:
    desc: Verify flux meets the prerequisites
    cmd: flux check --pre

  install:
    desc: Install Flux into a Kubernetes cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    prompt: Bootstrap Flux into the '{{.cluster}}' cluster... continue?
    cmds:
      - kubectl --context {{.cluster}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/flux
      - cat {{.ROOT_DIR}}/age.key | kubectl -n flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin
      - sops --decrypt --in-place {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml
      - kubectl --context {{.cluster}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars
      - kubectl --context {{.cluster}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/flux/config
      - defer: sops --encrypt --in-place {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml
    requires:
      vars: ["cluster"]
    preconditions:
      - {
          msg: "Flux appears already installed",
          sh: "kubectl --context {{.cluster}} get namespace flux-system &>/dev/null && exit 1 || exit 0",
        }
      - {
          msg: "Age private key not found",
          sh: "test -f {{.ROOT_DIR}}/age.key",
        }
      - {
          msg: "Cluster settings not found",
          sh: "test -f {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-settings.yaml",
        }
      - {
          msg: "Cluster secrets not found",
          sh: "test -f {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml",
        }
      - {
          msg: "Unable to decrypt sops secret",
          sh: "sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml",
        }

  uninstall:
    desc: Uninstall Flux from a Kubernetes cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    prompt: Uninstall Flux from the '{{.cluster}}' cluster... continue?
    cmds:
      - flux uninstall --namespace=flux-system
      - defer: sops --encrypt --in-place {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml
    requires:
      vars: ["cluster"]
    preconditions:
      - {
          msg: "Flux not found",
          sh: "kubectl --context {{.cluster}} get namespace flux-system &>/dev/null || exit 1",
        }

  helm-restart:
    desc: Restart all failed Helm Releases
    cmds:
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux suspend hr $0 -n $1'
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux resume hr $0 -n $1'

  apply:
    desc: Apply a Flux Kustomization resource for a cluster
    summary: |
      Args:
        path: Path under apps containing the Flux Kustomization resource (ks.yaml) (required)
        ns: Namespace the Flux Kustomization exists in (default: flux-system)
    cmd: |
      flux --kubeconfig {{.KUBECONFIG_FILE}} build ks $(basename {{.path}}) \
          --namespace {{.ns}} \
          --kustomization-file {{.KUBERNETES_DIR}}/apps/{{.path}}/ks.yaml \
          --path {{.KUBERNETES_DIR}}/apps/{{.path}} \
          {{- if contains "not found" .ks }}--dry-run \{{ end }}
      | \
      kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side \
          --field-manager=kustomize-controller -f -
    requires:
      vars: ["path"]
    vars:
      ns: '{{.ns | default "flux-system"}}'
      ks:
        sh: flux --kubeconfig {{.KUBECONFIG_FILE}} --namespace {{.ns}} get kustomizations $(basename {{.path}}) 2>&1
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }
      - {
          msg: "Missing Flux Kustomization for app {{.path}}",
          sh: "test -f {{.KUBERNETES_DIR}}/apps/{{.path}}/ks.yaml",
        }

  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux --kubeconfig {{.KUBECONFIG_FILE}} reconcile --namespace flux-system kustomization cluster --with-source
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }

  github-deploy-key:
    cmds:
      - kubectl create namespace flux-system --dry-run=client -o yaml | kubectl --kubeconfig {{.KUBECONFIG_FILE}} apply --filename -
      - sops --decrypt {{.GITHUB_DEPLOY_KEY_FILE}} | kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename -
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.AGE_FILE}}" }
      - {
          msg: "Missing Github deploy key file",
          sh: "test -f {{.GITHUB_DEPLOY_KEY_FILE}}",
        }
